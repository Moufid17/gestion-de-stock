services:
  gstock-jdk-server:
    image: openjdk:17-jdk-alpine
    container_name: 'gstock-jdk-server'
    working_dir: /app
    command: ["java", "-jar", "/app/gestion-de-stock-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8089:8080"
    volumes:
      - ./target/gestion-de-stock-0.0.1-SNAPSHOT.jar:/app/gestion-de-stock-0.0.1-SNAPSHOT.jar
    depends_on:
      gstock-db-postgres :
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}

  gstock-db-postgres:
    container_name: 'gstock-db-postgres'
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "/bin/sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 15s
      retries: 10
      start_period: 60s
      timeout: 10s

volumes:
  db-data: